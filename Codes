package org.example.controller;

import org.example.model.MergedEntity;
import org.example.service.KycMergeService;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;
import java.util.Optional;

@RestController
@RequestMapping("/kyc")
public class KycController {

    private final KycMergeService kycMergeService;

    public KycController(KycMergeService kycMergeService) {
        this.kycMergeService = kycMergeService;
    }

    @GetMapping("/entities")
    public List<MergedEntity> getAllEntities() {
        return kycMergeService.getAllMergedEntities();
    }

    @GetMapping("/entity")
    public ResponseEntity<MergedEntity> getByPtyId(@RequestParam Integer ptyId) {
        Optional<MergedEntity> entity = kycMergeService.getByPtyId(ptyId);
        return entity.map(ResponseEntity::ok)
                    .orElse(ResponseEntity.notFound().build());
    }

    @GetMapping("/risk")
    public List<MergedEntity> getByRisk(@RequestParam String industryCode) {
        return kycMergeService.getByRiskIndustryCode(industryCode);
    }

    @GetMapping("/freeze")
    public List<MergedEntity> getByFreezeStatus(@RequestParam boolean frozen) {
        return kycMergeService.getByFreezeFlag(frozen);
    }

    @PostMapping("/refresh")
    public String refreshData() {
        kycMergeService.loadAndMergeData();
        return "Data refreshed successfully";
    }
}
