@Service
public class DataService {

    private final WebClient webClient;
    private final AuthService authService;

    @Value("${api.finance.url}")
    private String financeUrl;

    @Value("${api.kyc.url}")
    private String kycUrl;

    public DataService(WebClient.Builder webClientBuilder, AuthService authService) {
        this.webClient = webClientBuilder.build();
        this.authService = authService;
    }

    private <T> T fetch(String url, Class<T> clazz) {
        String token = authService.fetchAuthToken(); // ðŸ”‘ get fresh token here

        try {
            return webClient.get()
                .uri(url)
                .header("Accept", "application/json;version=gamma")
                .header("Authorization", "Bearer " + token)
                .retrieve()
                .bodyToMono(clazz)
                .block();
        } catch (Exception e) {
            throw new RuntimeException("Failed to fetch data from: " + url, e);
        }
    }

    // mergeData and fetchMergedData stay same...
}
