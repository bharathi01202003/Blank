package com.example.service;

import com.example.model.FinanceWrapper;
import com.example.model.KycWrapper;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

@Service
public class ApiFetchService {

    private final RestTemplate restTemplate;
    private final ObjectMapper objectMapper;

    public ApiFetchService() {
        this.restTemplate = new RestTemplate();
        this.objectMapper = new ObjectMapper();
    }

    public FinanceWrapper fetchFinanceData(String url) {
        try {
            String response = restTemplate.getForObject(url, String.class);
            return objectMapper.readValue(response, FinanceWrapper.class);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public KycWrapper fetchKycData(String url) {
        try {
            String response = restTemplate.getForObject(url, String.class);
            return objectMapper.readValue(response, KycWrapper.class);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }
}


package com.example;

import com.example.model.FinanceWrapper;
import com.example.model.KycWrapper;
import com.example.service.ApiFetchService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class MainApp implements CommandLineRunner {

    @Autowired
    private ApiFetchService apiFetchService;

    public static void main(String[] args) {
        SpringApplication.run(MainApp.class, args);
    }

    @Override
    public void run(String... args) {
        String financeUrl = "https://api.example.com/finance";
        String kycUrl = "https://api.example.com/kyc";

        FinanceWrapper finance = apiFetchService.fetchFinanceData(financeUrl);
        KycWrapper kyc = apiFetchService.fetchKycData(kycUrl);

        if (finance != null && finance.entity != null) {
            System.out.println("Finance Identifiers: " + finance.entity.identifiers);
            System.out.println("Finance Business Address: " + finance.entity.businessAddress);
        }

        if (kyc != null && !kyc.results.isEmpty()) {
            System.out.println("KYC Identifiers: " + kyc.results.get(0).identifiers);
            System.out.println("KYC Registration Address: " + kyc.results.get(0).kycData.registrationAddress);
        }
    }
}
