package org.example.service;

import org.example.model.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestClientException;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;

@Service
public class KycMergeService {

    @Autowired
    private RestTemplate restTemplate;

    public List<MergedEntity> mergeDataFromApis() {
        List<MergedEntity> mergedList = new ArrayList<>();

        try {
            // Fetch data from finance API
            String financeApiUrl = "https://api.example.com/finance";
            File1Root file1Root = restTemplate.getForObject(financeApiUrl, File1Root.class);
            
            if (file1Root == null || file1Root.getResults() == null) {
                System.out.println("Finance API returned null data");
                return mergedList;
            }

            // Fetch data from KYC API
            String kycApiUrl = "https://api.example.com/kyc";
            File2Root file2Root = restTemplate.getForObject(kycApiUrl, File2Root.class);
            
            if (file2Root == null || file2Root.getResults() == null) {
                System.out.println("KYC API returned null data");
                return mergedList;
            }

            // Merge logic
            for (File1Result file1Result : file1Root.getResults()) {
                try {
                    if (file1Result.getEntity() == null || 
                        file1Result.getEntity().getIdentifiers() == null) {
                        continue;
                    }

                    for (File2Result file2Result : file2Root.getResults()) {
                        try {
                            if (file2Result.getIdentifiers() == null || 
                                file2Result.getIdentifiers().isEmpty()) {
                                continue;
                            }

                            // Compare identifiers
                            if (file1Result.getEntity().getIdentifiers().getPtyId()
                                .equals(file2Result.getIdentifiers().get(0).getPtyId())) {
                                
                                MergedEntity merged = new MergedEntity();
                                merged.setIdentifiers(file1Result.getEntity().getIdentifiers());
                                merged.setBusinessAddress(file1Result.getEntity().getBusinessAddress());
                                
                                if (file2Result.getKycData() != null) {
                                    merged.setKyCsites(file2Result.getKycData().getKyCsites());
                                    merged.setKyCsegment(file2Result.getKycData().getKyCsegment());
                                    merged.setRiskIndustry(file2Result.getKycData().getRiskIndustry());
                                }
                                
                                mergedList.add(merged);
                            }
                        } catch (Exception e) {
                            System.err.println("Error processing KYC record: " + e.getMessage());
                        }
                    }
                } catch (Exception e) {
                    System.err.println("Error processing finance record: " + e.getMessage());
                }
            }

        } catch (RestClientException e) {
            System.err.println("API call failed: " + e.getMessage());
            // Optionally throw a custom exception or return error response
        } catch (Exception e) {
            System.err.println("Unexpected error: " + e.getMessage());
        }

        return mergedList;
    }
}
