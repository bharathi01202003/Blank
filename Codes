package com.example.merger.service;

import com.example.model.finance.Entity;
import com.example.model.finance.FinanceResult;
import com.example.model.kyc.KycData;
import com.example.model.kyc.KycResult;
import com.example.merger.dto.MergedResult;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.List;
import java.util.stream.Collectors;

@Service
public class MergerService {

    @Autowired
    private RestTemplate restTemplate;

    public List<MergedResult> getMergedData() {
        FinanceResult financeResult = restTemplate.getForObject("http://localhost:8081/finance", FinanceResult.class);
        KycResult kycResult = restTemplate.getForObject("http://localhost:8082/kyc", KycResult.class);

        List<Entity> financeEntities = financeResult.getResults();
        List<KycData> kycDataList = kycResult.getResults();

        return kycDataList.stream()
                .flatMap(kycData -> financeEntities.stream()
                        .filter(finEntity -> finEntity.getIdentifiers() != null &&
                                finEntity.getIdentifiers().stream()
                                        .anyMatch(finId -> finId.getKycid().equals(kycData.getIdentifier().getKycid())))
                        .map(finEntity -> new MergedResult(
                                kycData.getIdentifier().getKycid(),
                                finEntity,
                                kycData)))
                .collect(Collectors.toList());
    }
}
